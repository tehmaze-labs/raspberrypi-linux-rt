name: Pi kernel build tests

on:
  pull_request:
    paths-ignore:
      - '.github/**'
    branches: [ "rpi-*" ]
  push:
    paths-ignore:
      - '.github/**'
    branches: [ "rpi-*" ]
  workflow_dispatch:

env:
  NUM_JOBS: 3

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: bcm2711
            arch: arm
            defconfig: bcm2711_defconfig
            kernel: kernel7l

          - name: bcm2711_arm64
            arch: arm64
            defconfig: bcm2711_defconfig
            kernel: kernel8

          - name: bcm2712
            arch: arm64
            defconfig: bcm2712_defconfig
            kernel: kernel_2712

    steps:
    - name: Update install
      run:
        sudo apt-get update

    - name: Install toolchain
      run:
        if [[ "${{matrix.arch}}" == "arm64" ]]; then
          sudo apt-get install gcc-aarch64-linux-gnu;
        else
          sudo apt-get install gcc-arm-linux-gnueabihf;
        fi
      timeout-minutes: 5

    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
        clean: true

    - name: Apply RT patch
      run: |
        wget -O- https://mirrors.edge.kernel.org/pub/linux/kernel/projects/rt/6.6/patch-6.6.30-rt30.patch.gz | \
           gunzip -c | patch -p1

    - name: Build kernel ${{matrix.name}}
      run: |
        mkdir ${{github.workspace}}/build
        export ARCH=${{matrix.arch}}
        if [[ "$ARCH" == "arm64" ]]; then
          export CROSS_COMPILE=aarch64-linux-gnu-
          export DTS_SUBDIR=broadcom
          export IMAGE=Image.gz
        else
          export CROSS_COMPILE=arm-linux-gnueabihf-
          export DTS_SUBDIR=broadcom
          export IMAGE=zImage
        fi
        make O=${{github.workspace}}/build ${{matrix.defconfig}}
        scripts/config --file ${{github.workspace}}/build/.config --set-val CONFIG_WERROR y
        scripts/config --file ${{github.workspace}}/build/.config --set-val PREEMPT n
        scripts/config --file ${{github.workspace}}/build/.config --set-val PREEMPT_RT y
        make O=${{github.workspace}}/build -j ${{env.NUM_JOBS}} $IMAGE modules dtbs
        mkdir -p ${{github.workspace}}/install/boot/overlays
        make O=${{github.workspace}}/build INSTALL_MOD_PATH=${{github.workspace}}/install modules_install
        cp ${{github.workspace}}/build/arch/${ARCH}/boot/dts/${DTS_SUBDIR}/*.dtb ${{github.workspace}}/install/boot/
        cp ${{github.workspace}}/build/arch/${ARCH}/boot/dts/overlays/*.dtb* ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/arch/${ARCH}/boot/dts/overlays/README ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/build/arch/${ARCH}/boot/$IMAGE ${{github.workspace}}/install/boot/${{matrix.kernel}}.img

    - name: Tar build
      run: tar -cvf ${{matrix.name}}_build.tar -C ${{github.workspace}}/install .

    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: ${{matrix.name}}_build
        path: ${{matrix.name}}_build.tar
        retention-days: 90
